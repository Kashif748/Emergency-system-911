/* tslint:disable */
/* eslint-disable */
import { AssetsCategoryProjection } from './assets-category-projection';
import { AssetsGroup } from './assets-group';
import { CircularStatus } from './circular-status';
import { City } from './city';
import { Confidentialty } from './confidentialty';
import { CorrespondenceStatus } from './correspondence-status';
import { DailySummaryReportOptType } from './daily-summary-report-opt-type';
import { DailySummaryReportStatus } from './daily-summary-report-status';
import { DashboardCard } from './dashboard-card';
import { EmergencyLevel } from './emergency-level';
import { EntityTag } from './entity-tag';
import { EnviromentalImpact } from './enviromental-impact';
import { Hospital } from './hospital';
import { IdNameProjection } from './id-name-projection';
import { IncidentCategory } from './incident-category';
import { IncidentRiskImpact } from './incident-risk-impact';
import { IncidentStatus } from './incident-status';
import { InterimIncidentStatuses } from './interim-incident-statuses';
import { Kpi } from './kpi';
import { LibraryAccessType } from './library-access-type';
import { LibraryCategory } from './library-category';
import { NewsType } from './news-type';
import { OperationalReportStatus } from './operational-report-status';
import { OrgQuickLink } from './org-quick-link';
import { OrgStructureProjection } from './org-structure-projection';
import { PriorityProjection } from './priority-projection';
import { Ranks } from './ranks';
import { Reason } from './reason';
import { ReportingVia } from './reporting-via';
import { Sla } from './sla';
import { TaskStatus } from './task-status';
import { TaskType } from './task-type';
import { UserMinimunProjection } from './user-minimun-projection';
export interface CommonDataProjection {
  assetsCategory?: Array<AssetsCategoryProjection>;
  assetsGroup?: Array<AssetsGroup>;
  circularStatus?: Array<CircularStatus>;
  cities?: Array<City>;
  confidentialties?: Array<Confidentialty>;
  correspondenceStatus?: Array<CorrespondenceStatus>;
  currentGroupDetails?: Array<IdNameProjection>;
  currentOrgDetails?: OrgStructureProjection;
  currentUserDetails?: UserMinimunProjection;
  dailySumariesReportOptType?: Array<DailySummaryReportOptType>;
  dailySummaryReportStatus?: Array<DailySummaryReportStatus>;
  dashboardCard?: Array<DashboardCard>;
  emergencyLevels?: Array<EmergencyLevel>;
  entityTags?: Array<EntityTag>;
  enviromentalImpacts?: Array<EnviromentalImpact>;
  exerciseCommitteeRole?: Array<IdNameProjection>;
  exerciseMemberRole?: Array<IdNameProjection>;
  exerciseStatus?: Array<IdNameProjection>;
  exerciseType?: Array<IdNameProjection>;
  hospitals?: Array<Hospital>;
  incidentCategories?: Array<IncidentCategory>;
  incidentRiskImpacts?: Array<IncidentRiskImpact>;
  incidentStatus?: Array<IncidentStatus>;
  interimIncidentStatuses?: Array<InterimIncidentStatuses>;
  kpi?: Array<Kpi>;
  libraryAccessTypes?: Array<LibraryAccessType>;
  libraryCategories?: Array<LibraryCategory>;
  newsTypes?: Array<NewsType>;
  operationalReportStatus?: Array<OperationalReportStatus>;
  orgQuickLink?: Array<OrgQuickLink>;
  priorities?: Array<PriorityProjection>;
  ranks?: Array<Ranks>;
  reasons?: Array<Reason>;
  reportingVias?: Array<ReportingVia>;
  sla?: Array<Sla>;
  taskStatus?: Array<TaskStatus>;
  taskType?: Array<TaskType>;
  userSystemId?: number;
}

